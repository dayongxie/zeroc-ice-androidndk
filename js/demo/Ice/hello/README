This demo illustrates how to invoke ordinary (twoway) operations, as
well as how to make oneway and batched invocations.

To run the demo, first you need to start the Ice hello server. This
distribution includes server implementations in Python and C++, and
each one has its own README file with instructions for starting the
server. Please refer to the Python or C++ README in the appropriate
demo subdirectory for more information.

Note:

 * To use the Python server you'll need a Python installation that is
   compatible with the Ice for Python module included in Ice 3.5.1.

 * To use the C++ server you'll need a C++ compiler compatible with
   the Ice 3.5.1 C++ distribution.

After starting the server, open a separate window and start the
client:

$ node Client.js

To test timeouts you can use 'T' to set a timeout on the client proxy
and 'P' to set a delayed response in the server to cause a timeout.
You will notice that two "Hello World!" messages will be printed by
the server in this case. This is because the sayHello method is marked
as idempotent in the slice, meaning that Ice does not need to follow
the at-most-once retry semantics. See the manual for more information
about retry behavior.
